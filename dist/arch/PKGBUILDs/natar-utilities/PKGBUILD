# Maintainer: Jeremy Laviole <jiii@jiii-mi>
pkgname=natar-utilities
pkgver=r100.c6eef07
pkgrel=1
epoch=
pkgdesc="Web admistation for your Natar device."
arch=('i686' 'x86_64')
url=""
license=('')
groups=()
depends=('nginx' 'ruby')
makedepends=('yarn') ## Webpack
checkdepends=()
optdepends=()
provides=()
conflicts=()
replaces=()
backup=()
options=()
install=
changelog=
source=("${pkgname%-git}::git+ssh://git@forge.pole-aquinetic.net/nectar-platform/utilities.git#branch=dist")
md5sums=('SKIP')
noextract=()

pkgver() {
	cd "$srcdir/${pkgname%-git}"
	printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

build() {
  cd "$srcdir/${pkgname%-git}"

  ## Package the gems
  bundle install --deployment

}

package() {
  cd "$srcdir/${pkgname%-git}/"

  mkdir -p $pkgdir/usr/share/$pkgname
  mkdir -p $pkgdir/usr/share/$pkgname/tmp
  mkdir -p $pkgdir/usr/share/natar-utilities/apps-available
  mkdir -p $pkgdir/usr/share/natar-utilities/apps-enabled
  mkdir -p $pkgdir/usr/share/natar-utilities/.eye
  chmod 777 $pkgdir/usr/share/natar-utilities/.eye

  mkdir -p $pkgdir/usr/lib/systemd/user
#  mkdir -p $pkgdir/etc/systemd/system
  mkdir -p $pkgdir/usr/bin

  install Gemfile.lock $pkgdir/usr/share/$pkgname/
  install Gemfile $pkgdir/usr/share/$pkgname/
  
  cp -r vendor $pkgdir/usr/share/$pkgname/
  
  ## Install the eye services
  install natar-webserver.eye $pkgdir/usr/share/natar-utilities/apps-enabled
  install natar-core.eye $pkgdir/usr/share/natar-utilities/apps-enabled

  ## Install the main service, as user service
  install eye.service $pkgdir/usr/lib/user/eye.service

  #  install natar.eye $pkgdir/usr/share/$pkgname/
  #  ln -s $pkgdir/usr/share/$pkgname/ $pkgdir/eye.conf
  #  install natar.eye $pkgdir/eye.conf
  
  cd processes

  ## Install the redis service
  install redis.conf $pkgdir/etc/redis-natar.conf
  install redis-natar.service $pkgdir/usr/lib/system/redis-natar.service

  cp -r data $pkgdir/usr/share/$pkgname/
  cp -r apps $pkgdir/usr/share/$pkgname/

  chmod -R a+w $pkgdir/usr/share/$pkgname/tmp
}
